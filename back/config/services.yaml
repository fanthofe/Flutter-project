# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    admin_email: '%env(ADMIN_EMAIL)%'
    mercure_hub_url:    '%env(MERCURE_PUBLIC_URL)%'
    mercureSecret:        '%env(MERCURE_JWT_SECRET)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        # bind parameters to arguments in your services via "%some_parameter%" for acces to this in service class
        #bind:
            #$adminEmail: '%admin_email%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # On every request we check if token is valid and if user is authenticated
    App\EventListener\JwtTokenListener:
        arguments: ['@security.token_storage']
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
    
    # On login success we fetch user and retrun it with token in response for client
    App\EventListener\LoginSuccessListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onLoginSuccess }
    
    # On chat message flush event, we send a message to mercure hub
    App\EventSubscriber\ChatMessageEventSubscriber:
        arguments:
            $container: '@service_container'
        tags:
            - { name: doctrine.event_subscriber, connection: default }
    
    # Custom voter for chat message only Athor and admin can patch or delete his message
    App\Security\Voters\ChatMessageVoter:
        tags:
            - { name: 'chatmessage.voter' }
    
    # Custom voter for user profile only Athor and admin can patch or delete his profile
    App\Security\Voters\UserProfileVoter:
        tags:
            - { name: 'userprofile.voter' }